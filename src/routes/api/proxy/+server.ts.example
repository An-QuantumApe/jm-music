// Example SvelteKit API route for proxying HIFI API requests
// This helps bypass CORS restrictions
// Create this file at: src/routes/api/proxy/+server.ts

import type { RequestHandler } from './$types';

const ALLOWED_ORIGINS = ['http://localhost:5173', 'http://localhost:4173']; // Add your production domain
const HIFI_API_BASE = 'https://tidal.401658.xyz';

// GET handler
export const GET: RequestHandler = async ({ url, request }) => {
	const targetUrl = url.searchParams.get('url');
	const origin = request.headers.get('origin') || '';

	// Validate origin
	if (!ALLOWED_ORIGINS.includes(origin) && !origin.includes('localhost')) {
		return new Response('Forbidden', { status: 403 });
	}

	if (!targetUrl) {
		return new Response(JSON.stringify({ error: 'Missing url parameter' }), {
			status: 400,
			headers: { 'Content-Type': 'application/json' }
		});
	}

	// Validate that the URL is from the HIFI API
	if (!targetUrl.startsWith(HIFI_API_BASE)) {
		return new Response(JSON.stringify({ error: 'Invalid target URL' }), {
			status: 400,
			headers: { 'Content-Type': 'application/json' }
		});
	}

	try {
		const response = await fetch(targetUrl, {
			headers: {
				'User-Agent': 'Mozilla/5.0 (compatible; TIDAL-UI/1.0)'
			}
		});

		if (!response.ok) {
			return new Response(
				JSON.stringify({
					error: 'Failed to fetch from HIFI API',
					status: response.status
				}),
				{
					status: response.status,
					headers: { 'Content-Type': 'application/json' }
				}
			);
		}

		const data = await response.json();

		return new Response(JSON.stringify(data), {
			status: 200,
			headers: {
				'Content-Type': 'application/json',
				'Access-Control-Allow-Origin': origin,
				'Access-Control-Allow-Methods': 'GET, OPTIONS',
				'Access-Control-Allow-Headers': 'Content-Type',
				'Cache-Control': 'public, max-age=300' // Cache for 5 minutes
			}
		});
	} catch (error) {
		console.error('Proxy error:', error);
		return new Response(
			JSON.stringify({
				error: 'Proxy request failed',
				message: error instanceof Error ? error.message : 'Unknown error'
			}),
			{
				status: 500,
				headers: { 'Content-Type': 'application/json' }
			}
		);
	}
};

// OPTIONS handler for CORS preflight
export const OPTIONS: RequestHandler = async ({ request }) => {
	const origin = request.headers.get('origin') || '';

	if (!ALLOWED_ORIGINS.includes(origin) && !origin.includes('localhost')) {
		return new Response(null, { status: 403 });
	}

	return new Response(null, {
		status: 204,
		headers: {
			'Access-Control-Allow-Origin': origin,
			'Access-Control-Allow-Methods': 'GET, OPTIONS',
			'Access-Control-Allow-Headers': 'Content-Type',
			'Access-Control-Max-Age': '86400'
		}
	});
};
